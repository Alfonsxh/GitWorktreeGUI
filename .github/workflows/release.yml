name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build all packages
        run: |
          npm run build:core
          cd plugins/vscode && npm ci && npm run compile
      
      - name: Package VS Code extension
        working-directory: plugins/vscode
        run: npx vsce package --no-dependencies
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: |
            plugins/vscode/*.vsix
            packages/core/dist

  release-vscode:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: release-artifacts
      
      - name: Install vsce
        run: npm install -g @vscode/vsce ovsx
      
      - name: Publish to VS Code Marketplace
        if: env.VSCE_PAT != ''
        working-directory: plugins/vscode
        run: vsce publish -p ${{ secrets.VSCE_PAT }}
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
      
      - name: Publish to Open VSX
        if: env.OVSX_PAT != ''
        working-directory: plugins/vscode
        run: ovsx publish -p ${{ secrets.OVSX_PAT }}
        env:
          OVSX_PAT: ${{ secrets.OVSX_PAT }}

  create-github-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: release-artifacts
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            plugins/vscode/*.vsix
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}