name: Release

on:
  push:
    tags:
      - 'v*'

defaults:
  run:
    shell: bash

permissions:
  contents: write

jobs:
  build:
    name: Package ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: macos-x64
            os: macos-13
            make_target: dist-mac
            make_args: 'DIST_MAC_ARGS="--x64 --publish never"'
            artifact_glob: |
              release/*-mac-x64.dmg
              release/*-mac-x64.zip
          - name: macos-arm64
            os: macos-14
            make_target: dist-mac
            make_args: 'DIST_MAC_ARGS="--arm64 --publish never"'
            artifact_glob: |
              release/*-mac-arm64.dmg
              release/*-mac-arm64.zip
          - name: windows-x64
            os: windows-latest
            make_target: dist-win
            make_args: 'DIST_WIN_ARGS="--x64 --publish never"'
            artifact_glob: |
              release/*-win-x64.exe
          - name: windows-arm64
            os: windows-latest
            make_target: dist-win
            make_args: 'DIST_WIN_ARGS="--arm64 --publish never"'
            artifact_glob: |
              release/*-win-arm64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install make (Windows)
        if: runner.os == 'Windows'
        run: choco install make -y

      - name: Build application bundles
        run: make build-prod

      - name: Package ${{ matrix.name }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: make ${{ matrix.make_target }} ${{ matrix.make_args }}

      - name: Upload packaged artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.artifact_glob }}
          if-no-files-found: error

  publish:
    name: Publish release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download packaged artifacts
        uses: actions/download-artifact@v4
        with:
          path: release

      - name: List release payload
        run: ls -R release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: release/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
