name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            node-version: 20.x
            name: ubuntu
            artifacts: |
              release/*-linux-*.AppImage
              release/*-linux-*.deb
              release/*-linux-*.rpm
          - os: windows-latest
            node-version: 20.x
            name: windows
            artifacts: |
              release/*-win-*.exe
          - os: macos-latest
            node-version: 20.x
            name: macos
            artifacts: |
              release/*-mac-*.dmg
              release/*-mac-*.zip

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install make (Windows)
      if: runner.os == 'Windows'
      run: choco install make -y

    - name: Build application
      run: make build-prod

    - name: Run tests
      run: npm test || true

    - name: Build distributables (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: make dist-linux

    - name: Build distributables (Windows)
      if: matrix.os == 'windows-latest'
      run: make dist-win

    - name: Build distributables (macOS)
      if: matrix.os == 'macos-latest'
      run: make dist-mac

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-build
        path: ${{ matrix.artifacts }}
        if-no-files-found: error
        retention-days: 7
